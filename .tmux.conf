# Script installation...
# 1. run setup.sh

# Keybindings
# Prefix key is option bound to the 'meta' key using iTerm.
#unbind C-b
#set-option -g prefix meta
#bind-key meta send-prefix # not working as intended

# Window splitting
# bind | split-window -h
# bind - split-window -v
# unbind '"'
# unbind %
# 
# # Configuration reload
# bind r source-file ~/.tmux.conf
# 
# # Directional pane switching
# bind -n M-h

set-option -g default-command "reattach-to-user-namespace -l bash"
set -g default-terminal "screen-256color"
set-window-option -g xterm-keys on

# force automatic rename
setw -g automatic-rename on

# activity window settings 
set-window-option -g window-status-activity-attr none


set-option -g status-fg white
set-option -g status-bg default
set-option -g status-attr default
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr default
set-window-option -g window-status-current-fg blue
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr none
set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bright
set -g status-left " "
set -g status-justify left
setw -g window-status-format         ' #(echo "#{pane_current_command}") '
setw -g window-status-current-format ' #(echo "#{pane_current_command}") '
set -g status-right " "

# vim
setw -g mode-keys vi
set-option -g status-keys emacs

# C-a prefix
unbind C-b

set -g prefix C-a
bind a send-prefix
bind b set -g status

bind-key * set-window-option synchronize-pane
bind-key -n C-S-h previous-window
bind-key -n C-S-l next-window

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1


# renumber windows sequentially after closing any of them
set -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

unbind -T root C-h
unbind -T root C-j
unbind -T root C-k
unbind -T root C-l
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

set -s escape-time 0
setw -g aggressive-resize on
setw -g monitor-activity on
set -g visual-activity on

# mouse
set -g mouse on
